name: Build

env:
  MAVEN_OPTS: " -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN "
  MAVEN_CLI_OPTS: " --show-version --batch-mode --no-transfer-progress "

on:
  push:
    paths:
      - 'conventional-commits-*/**'
      - 'pom.xml'
jobs:
  build_job:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/net/videki/**
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean package -DskipTests $MAVEN_OPTS $MAVEN_CLI_OPTS

  test_job:
    name: Test
    runs-on: ubuntu-latest
    needs: build_job

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/net/videki/**
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Test build
        run: mvn clean verify $MAVEN_OPTS $MAVEN_CLI_OPTS

  release_job:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - build_job
      - test_job
    if: github.ref == 'refs/heads/master'
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v2

      - name: Set up Apache Maven Central
        uses: actions/setup-java@v3
        with:
            java-version: 11
            distribution: 'adopt'
#            cache: 'maven'
#            server-id: ossrh
#            server-username: SONATYPE_USERNAME
#            server-password: SONATYPE_PASSWORD
            gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
            gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/net/videki/**
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Configure Git
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Prepare release
        run: mvn release:prepare -Prelease -DskipTests $MAVEN_OPTS $MAVEN_CLI_OPTS
        env:
          OSSRH_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          OSSRH_TOKEN: ${{ secrets.SONATYPE_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish release
        run: mvn release:perform -Prelease -DskipTests $MAVEN_OPTS $MAVEN_CLI_OPTS
        env:
          OSSRH_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          OSSRH_TOKEN: ${{ secrets.SONATYPE_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
